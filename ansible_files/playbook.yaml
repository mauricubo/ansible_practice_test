---
- name: Deploy a web application
  any_errors_fatal: True # stop the execution if any server has an error.
  hosts: webservers
  vars:    
    db_name: employee_db    
    db_user: db_user    
    db_password: Passw0rd
  tasks:
    - name: Install all required dependencies
      apt: name={{ item }} state=present
      with_items:
        - python3
        - python3-setuptools
        - python3-dev
        - build-essential
        - python3-pip
        - python3-pymysql

    - name: Install MySQL database
      apt: name={{ item }} state=present
      with_items:
        - mysql-client
        - mysql-server
    
    - name: Start MySQL Service
      shell: service mysql start
    
    - name: Create Database user
      mysql_user:
        login_unix_socket: /var/run/mysqld/mysqld.sock
        login_user: root
        login_password: ''
        name: "{{ db_user }}"
        password: "{{ db_password }}"
        priv: '*.*:ALL'
        state: present
        check_implicit_admin: true
    
    - name: Create Application Database
      mysql_db: 
        login_unix_socket: /var/run/mysqld/mysqld.sock
        login_user: root
        login_password: ''
        name: "{{ db_name }} "
        state: present
        check_implicit_admin: true
    
    
    - name: Install Python Flask dependency
      pip:
        name: "{{ item }}"
        state: present
      with_items:
        - flask
        - flask-mysql
    
    - name: Copy source code
      copy: src=app.py dest=/opt/app.py
    
    - name: Start Web Server
      shell: FLASK_APP=/opt/app.py nohup flask run --host=0.0.0.0 &
    
    # needs previous email configuration 
    - name: "Send notification email"
      mail:
        to: devops@corp.com
        subject: Server Deployed!
        body: Web Server Deployed Successfully
      ignore_errors: yes